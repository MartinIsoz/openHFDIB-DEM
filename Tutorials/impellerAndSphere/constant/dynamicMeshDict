/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  4.1                                   |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      dynamicMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dynamicFvMesh   staticFvMesh;
//~ dynamicFvMesh   dynamicRefineFvMesh;
//~ 
//~ dynamicFvMesh   solidBodyMotionFvMesh;

motionSolverLibs ( "libfvMotionSolvers.so" );

solidBodyMotionFvMeshCoeffs
{
    cellZone        rotating;

    solidBodyMotionFunction  rotatingMotion;
    rotatingMotionCoeffs
    {
        origin        (0 0 0);
        axis          (0 0 1);
        omega         -5; // 5 rad/s
    }
}

dynamicRefineFvMeshCoeffs
{
    // How often to refine
    refineInterval  1;

    // Field to base refinement on
    field           lambda;

    // Refine field inbetween lower..upper
    lowerRefineLevel 0.001;
    upperRefineLevel 0.999;

    // If value < unrefineLevel unrefine
    unrefineLevel   10;

    // Have slower than 2:1 refinement
    nBufferLayers   1;

    // Refine cells only up to maxRefinement levels
    maxRefinement   1;

    // Stop refinement if maxCells reached
    maxCells        50000;

    // Flux field and corresponding velocity field. Fluxes on changed
    // faces get recalculated by interpolating the velocity. Use 'none'
    // on surfaceScalarFields that do not need to be reinterpolated.
    //~ correctFluxes
    //~ (
        //~ (phi none)
        //~ (phi_0 none)
        //~ (phi_0_0 none)
    //~ );
    correctFluxes
    (
        (phi U)
        (phi_0 U_0)
        (phi_0_0 U_0_0)
        (ddt0(phi) none)
    );

    // Write the refinement level as a volScalarField
    dumpLevel       true;
}


// ************************************************************************* //
